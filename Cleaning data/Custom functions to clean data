##############
Define a function named recode_sex() that has one parameter: sex_value.
If sex_value equals 'Male', return 1.
Else, if sex_value equals 'Female', return 0.
If sex_value does not equal 'Male' or 'Female', return np.nan. NumPy has been pre-imported for you.
Apply your recode_sex() function over tips.sex using the .apply() method to create a new column: 'sex_recode'. Note that when passing in a function inside the .apply() method, you don't need to specify the parentheses after the function name.
Hit 'Submit Answer' and take note of the new 'sex_recode' column in the tips DataFrame!
#########################
coding:
# Define recode_sex()
def recode_sex(sex_value):
    # Return 1 if sex_value is 'Male'
    if sex_value == 'Male':
        return 1
    
    # Return 0 if sex_value is 'Female'    
    elif sex_value == 'Female':
        return 0
    
    # Return np.nan    
    else:
        return np.nan

# Apply the function to the sex column
tips['sex_recode'] = tips.sex.apply(recode_sex)

# Print the first five rows of tips
print(tips.head())
